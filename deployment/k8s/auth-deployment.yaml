apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  labels:
    app: pagamento
    tier: backend
    service: auth
spec:
  replicas: 3
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: pagamento
      service: auth
  template:
    metadata:
      labels:
        app: pagamento
        service: auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: auth-service
        image: pagamento/auth-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: pagamento-config
        - secretRef:
            name: pagamento-secrets
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "k8s"
        resources:
          limits:
            memory: "1024Mi"
            cpu: "500m"
          requests:
            memory: "512Mi"
            cpu: "200m"
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 45
          periodSeconds: 15
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: pagamento
    service: auth
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP
